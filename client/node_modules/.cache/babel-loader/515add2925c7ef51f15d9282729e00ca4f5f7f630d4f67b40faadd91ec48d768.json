{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{setMakeFilter,setDurationFilter,clearAllFilters}from'../../features/filters/filtersSlice';import{MAKES,FILTER_DURATIONS}from'../../utils/constants';import'./FilterPanel.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FilterPanel=()=>{const dispatch=useDispatch();const{filters}=useSelector(state=>state.filters);// Create local state to store temporary filter selections\nconst[tempFilters,setTempFilters]=useState({make:[...filters.make],duration:filters.duration});// Update local state when Redux state changes\nuseEffect(()=>{setTempFilters({make:[...filters.make],duration:filters.duration});},[filters]);const handleMakeChange=make=>{const currentMakes=[...tempFilters.make];const index=currentMakes.indexOf(make);if(index>-1){currentMakes.splice(index,1);}else{currentMakes.push(make);}setTempFilters({...tempFilters,make:currentMakes});};const handleDurationChange=duration=>{const newDuration=tempFilters.duration===duration?null:duration;setTempFilters({...tempFilters,duration:newDuration});};const handleApplyFilters=()=>{// Dispatch actions to update Redux state with temporary filter values\ndispatch(setMakeFilter(tempFilters.make));dispatch(setDurationFilter(tempFilters.duration));};const handleClearFilters=()=>{dispatch(clearAllFilters());};return/*#__PURE__*/_jsxs(\"div\",{className:\"filter-panel\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"filter-header\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"Filter Data By\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-section\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"filter-title\",children:\"MAKE\"}),MAKES.map(make=>/*#__PURE__*/_jsxs(\"div\",{className:\"filter-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:`make-${make.id}`,checked:tempFilters.make.includes(make.id),onChange:()=>handleMakeChange(make.id)}),/*#__PURE__*/_jsx(\"label\",{htmlFor:`make-${make.id}`,children:make.label})]},make.id))]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-section\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"filter-title\",children:\"DURATION\"}),FILTER_DURATIONS.map(duration=>/*#__PURE__*/_jsxs(\"div\",{className:\"filter-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:`duration-${duration.id}`,checked:tempFilters.duration===duration.id,onChange:()=>handleDurationChange(duration.id)}),/*#__PURE__*/_jsx(\"label\",{htmlFor:`duration-${duration.id}`,children:duration.label})]},duration.id))]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"apply-btn\",onClick:handleApplyFilters,children:\"APPLY FILTER\"}),/*#__PURE__*/_jsx(\"button\",{className:\"clear-btn\",onClick:handleClearFilters,children:\"REMOVE ALL FILTERS\"})]})]});};export default FilterPanel;","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","setMakeFilter","setDurationFilter","clearAllFilters","MAKES","FILTER_DURATIONS","jsx","_jsx","jsxs","_jsxs","FilterPanel","dispatch","filters","state","tempFilters","setTempFilters","make","duration","handleMakeChange","currentMakes","index","indexOf","splice","push","handleDurationChange","newDuration","handleApplyFilters","handleClearFilters","className","children","map","type","id","checked","includes","onChange","htmlFor","label","onClick"],"sources":["E:/openSource/inventory-dashboard/client/src/components/Filter/FilterPanel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { \r\n  setMakeFilter, \r\n  setDurationFilter, \r\n  clearAllFilters\r\n} from '../../features/filters/filtersSlice';\r\nimport { MAKES, FILTER_DURATIONS } from '../../utils/constants';\r\nimport './FilterPanel.css';\r\n\r\nconst FilterPanel = () => {\r\n  const dispatch = useDispatch();\r\n  const { filters } = useSelector(state => state.filters);\r\n  \r\n  // Create local state to store temporary filter selections\r\n  const [tempFilters, setTempFilters] = useState({\r\n    make: [...filters.make],\r\n    duration: filters.duration\r\n  });\r\n  \r\n  // Update local state when Redux state changes\r\n  useEffect(() => {\r\n    setTempFilters({\r\n      make: [...filters.make],\r\n      duration: filters.duration\r\n    });\r\n  }, [filters]);\r\n  \r\n  const handleMakeChange = (make) => {\r\n    const currentMakes = [...tempFilters.make];\r\n    const index = currentMakes.indexOf(make);\r\n    \r\n    if (index > -1) {\r\n      currentMakes.splice(index, 1);\r\n    } else {\r\n      currentMakes.push(make);\r\n    }\r\n    \r\n    setTempFilters({\r\n      ...tempFilters,\r\n      make: currentMakes\r\n    });\r\n  };\r\n  \r\n  const handleDurationChange = (duration) => {\r\n    const newDuration = tempFilters.duration === duration ? null : duration;\r\n    setTempFilters({\r\n      ...tempFilters,\r\n      duration: newDuration\r\n    });\r\n  };\r\n  \r\n  const handleApplyFilters = () => {\r\n    // Dispatch actions to update Redux state with temporary filter values\r\n    dispatch(setMakeFilter(tempFilters.make));\r\n    dispatch(setDurationFilter(tempFilters.duration));\r\n  };\r\n  \r\n  const handleClearFilters = () => {\r\n    dispatch(clearAllFilters());\r\n  };\r\n  \r\n  return (\r\n    <div className=\"filter-panel\">\r\n      <div className=\"filter-header\">\r\n        <h3>Filter Data By</h3>\r\n      </div>\r\n      \r\n      <div className=\"filter-section\">\r\n        <h4 className=\"filter-title\">MAKE</h4>\r\n        {MAKES.map(make => (\r\n          <div key={make.id} className=\"filter-option\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id={`make-${make.id}`}\r\n              checked={tempFilters.make.includes(make.id)}\r\n              onChange={() => handleMakeChange(make.id)}\r\n            />\r\n            <label htmlFor={`make-${make.id}`}>{make.label}</label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      \r\n      <div className=\"filter-section\">\r\n        <h4 className=\"filter-title\">DURATION</h4>\r\n        {FILTER_DURATIONS.map(duration => (\r\n          <div key={duration.id} className=\"filter-option\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id={`duration-${duration.id}`}\r\n              checked={tempFilters.duration === duration.id}\r\n              onChange={() => handleDurationChange(duration.id)}\r\n            />\r\n            <label htmlFor={`duration-${duration.id}`}>{duration.label}</label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      \r\n      <div className=\"filter-actions\">\r\n        <button \r\n          className=\"apply-btn\"\r\n          onClick={handleApplyFilters}\r\n        >\r\n          APPLY FILTER\r\n        </button>\r\n        <button \r\n          className=\"clear-btn\"\r\n          onClick={handleClearFilters}\r\n        >\r\n          REMOVE ALL FILTERS\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}