{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useSelector}from'react-redux';import{Chart}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend}from'chart.js';import{groupByMonth,formatCurrency}from'../../utils/formatters';import{VEHICLE_TYPES,CHART_COLORS}from'../../utils/constants';import'./Dashboard.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AverageMSRP=()=>{const{data,averageMSRP,status}=useSelector(state=>state.inventory);const[activeType,setActiveType]=useState(VEHICLE_TYPES.NEW);const[chartData,setChartData]=useState(null);useEffect(()=>{if(status==='succeeded'&&data.length>0){const groupedData=groupByMonth(data);const months=Object.keys(groupedData).sort((a,b)=>{const[aMonth,aYear]=a.split('/');const[bMonth,bYear]=b.split('/');if(aYear!==bYear)return aYear-bYear;return aMonth-bMonth;});const calculateAvgMSRP=(month,type)=>{const count=groupedData[month][type];if(count===0)return 0;let totalMSRP=0;switch(type){case VEHICLE_TYPES.NEW:totalMSRP=groupedData[month].newMSRP;break;case VEHICLE_TYPES.USED:totalMSRP=groupedData[month].usedMSRP;break;case VEHICLE_TYPES.CPO:totalMSRP=groupedData[month].cpoMSRP;break;default:break;}return totalMSRP/count;};const chartDatasets={labels:months,datasets:[{label:`Average MSRP (${activeType})`,data:months.map(month=>calculateAvgMSRP(month,activeType)),backgroundColor:CHART_COLORS[activeType],borderWidth:0,borderRadius:4}]};setChartData(chartDatasets);}},[data,status,activeType]);const handleTypeChange=type=>{setActiveType(type);};if(status==='loading'){return/*#__PURE__*/_jsx(\"div\",{className:\"section\",children:\"Loading...\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"section\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"section-title\",children:\"Average MSRP in USD\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"tabs\",children:[/*#__PURE__*/_jsx(\"div\",{className:`tab ${activeType===VEHICLE_TYPES.NEW?'active':''}`,onClick:()=>handleTypeChange(VEHICLE_TYPES.NEW),children:\"NEW\"}),/*#__PURE__*/_jsx(\"div\",{className:`tab ${activeType===VEHICLE_TYPES.USED?'active':''}`,onClick:()=>handleTypeChange(VEHICLE_TYPES.USED),children:\"USED\"}),/*#__PURE__*/_jsx(\"div\",{className:`tab ${activeType===VEHICLE_TYPES.CPO?'active':''}`,onClick:()=>handleTypeChange(VEHICLE_TYPES.CPO),children:\"CPO\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",children:chartData&&/*#__PURE__*/_jsx(Chart,{type:\"bar\",data:chartData,options:{responsive:true,maintainAspectRatio:false,plugins:{legend:{display:false},tooltip:{callbacks:{label:function(context){return formatCurrency(context.raw);}}}},scales:{y:{beginAtZero:true,grid:{color:'#f0f0f0'},ticks:{callback:function(value){return'$'+value.toLocaleString();}}},x:{grid:{display:false}}}},height:300})})]});};export default AverageMSRP;","map":{"version":3,"names":["React","useState","useEffect","useSelector","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","groupByMonth","formatCurrency","VEHICLE_TYPES","CHART_COLORS","jsx","_jsx","jsxs","_jsxs","AverageMSRP","data","averageMSRP","status","state","inventory","activeType","setActiveType","NEW","chartData","setChartData","length","groupedData","months","Object","keys","sort","a","b","aMonth","aYear","split","bMonth","bYear","calculateAvgMSRP","month","type","count","totalMSRP","newMSRP","USED","usedMSRP","CPO","cpoMSRP","chartDatasets","labels","datasets","label","map","backgroundColor","borderWidth","borderRadius","handleTypeChange","className","children","onClick","options","responsive","maintainAspectRatio","plugins","legend","display","tooltip","callbacks","context","raw","scales","y","beginAtZero","grid","color","ticks","callback","value","toLocaleString","x","height"],"sources":["E:/openSource/inventory-dashboard/client/src/components/Dashboard/AverageMSRP.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Chart } from 'react-chartjs-2';\r\nimport { \r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n} from 'chart.js';\r\nimport { groupByMonth, formatCurrency } from '../../utils/formatters';\r\nimport { VEHICLE_TYPES, CHART_COLORS } from '../../utils/constants';\r\nimport './Dashboard.css';\r\n\r\nconst AverageMSRP = () => {\r\n  const { data, averageMSRP, status } = useSelector(state => state.inventory);\r\n  const [activeType, setActiveType] = useState(VEHICLE_TYPES.NEW);\r\n  const [chartData, setChartData] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    if (status === 'succeeded' && data.length > 0) {\r\n      const groupedData = groupByMonth(data);\r\n      const months = Object.keys(groupedData).sort((a, b) => {\r\n        const [aMonth, aYear] = a.split('/');\r\n        const [bMonth, bYear] = b.split('/');\r\n        \r\n        if (aYear !== bYear) return aYear - bYear;\r\n        return aMonth - bMonth;\r\n      });\r\n      \r\n      const calculateAvgMSRP = (month, type) => {\r\n        const count = groupedData[month][type];\r\n        if (count === 0) return 0;\r\n        \r\n        let totalMSRP = 0;\r\n        switch (type) {\r\n          case VEHICLE_TYPES.NEW:\r\n            totalMSRP = groupedData[month].newMSRP;\r\n            break;\r\n          case VEHICLE_TYPES.USED:\r\n            totalMSRP = groupedData[month].usedMSRP;\r\n            break;\r\n          case VEHICLE_TYPES.CPO:\r\n            totalMSRP = groupedData[month].cpoMSRP;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        \r\n        return totalMSRP / count;\r\n      };\r\n      \r\n      const chartDatasets = {\r\n        labels: months,\r\n        datasets: [\r\n          {\r\n            label: `Average MSRP (${activeType})`,\r\n            data: months.map(month => calculateAvgMSRP(month, activeType)),\r\n            backgroundColor: CHART_COLORS[activeType],\r\n            borderWidth: 0,\r\n            borderRadius: 4,\r\n          }\r\n        ]\r\n      };\r\n      \r\n      setChartData(chartDatasets);\r\n    }\r\n  }, [data, status, activeType]);\r\n  \r\n  const handleTypeChange = (type) => {\r\n    setActiveType(type);\r\n  };\r\n  \r\n  if (status === 'loading') {\r\n    return <div className=\"section\">Loading...</div>;\r\n  }\r\n  \r\n  return (\r\n    <div className=\"section\">\r\n      <h3 className=\"section-title\">Average MSRP in USD</h3>\r\n      \r\n      <div className=\"tabs\">\r\n        <div \r\n          className={`tab ${activeType === VEHICLE_TYPES.NEW ? 'active' : ''}`}\r\n          onClick={() => handleTypeChange(VEHICLE_TYPES.NEW)}\r\n        >\r\n          NEW\r\n        </div>\r\n        <div \r\n          className={`tab ${activeType === VEHICLE_TYPES.USED ? 'active' : ''}`}\r\n          onClick={() => handleTypeChange(VEHICLE_TYPES.USED)}\r\n        >\r\n          USED\r\n        </div>\r\n        <div \r\n          className={`tab ${activeType === VEHICLE_TYPES.CPO ? 'active' : ''}`}\r\n          onClick={() => handleTypeChange(VEHICLE_TYPES.CPO)}\r\n        >\r\n          CPO\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"chart-container\">\r\n        {chartData && (\r\n          <Chart \r\n            type=\"bar\" \r\n            data={chartData}\r\n            options={{\r\n              responsive: true,\r\n              maintainAspectRatio: false,\r\n              plugins: {\r\n                legend: {\r\n                  display: false\r\n                },\r\n                tooltip: {\r\n                  callbacks: {\r\n                    label: function(context) {\r\n                      return formatCurrency(context.raw);\r\n                    }\r\n                  }\r\n                }\r\n              },\r\n              scales: {\r\n                y: {\r\n                  beginAtZero: true,\r\n                  grid: {\r\n                    color: '#f0f0f0'\r\n                  },\r\n                  ticks: {\r\n                    callback: function(value) {\r\n                      return '$' + value.toLocaleString();\r\n                    }\r\n                  }\r\n                },\r\n                x: {\r\n                  grid: {\r\n                    display: false\r\n                  }\r\n                }\r\n              }\r\n            }}\r\n            height={300}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AverageMSRP;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}